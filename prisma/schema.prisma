generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  fullName    String? @db.VarChar(255)
  password    String  @db.VarChar(255)
  email       String  @unique @db.VarChar(255)
  address     String? @db.VarChar(255)
  phone       String? @db.VarChar(255)
  accountType String  @db.VarChar(255)
  avatar      String? @db.VarChar(255)

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int // FK

  cart  Cart?
  Order Order?

  @@map("users")
}

model Role {
  id          Int     @id @default(autoincrement())
  name        String  @unique @db.VarChar(255)
  description String? @db.VarChar(255)

  users User[]

  @@map("roles")
}

model Product {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(255)
  price      Float   @db.Float
  image      String? @db.VarChar(255)
  detailDesc String  @db.MediumText
  shortDesc  String  @db.VarChar(255)
  quantity   Int     @db.Int
  sold       Int?    @default(0)
  factory    String  @db.VarChar(255)
  target     String  @db.VarChar(255)

  cartDetail CartDetail[]
  OderDetail OderDetail[]

  @@map("products")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.MediumText
  expiresAt DateTime
}

model Cart {
  id  Int @id @default(autoincrement())
  sum Int

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique // relation scalar field (used in the `@relation` attribute above)

  cartDetail CartDetail[]

  @@map("carts")
}

model CartDetail {
  id       Int @id @default(autoincrement())
  price    Int
  quantity Int

  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("cart_detail")
}

model Order {
  id             Int    @id @default(autoincrement())
  totalPrice     Float  @db.Float
  reciverName    String @db.VarChar(255)
  reciverAddress String @db.VarChar(255)
  reciverPhone   String @db.VarChar(255)
  status         String @default("PENDING") // PENDING, CANCELED, COMPLETE

  paymentMethod String // COD, BANKING,...
  paymentStatus String // PAYMENT_UNPAID, PAYMENT_SUCCED, PAYMENT_FAILED
  payment_Ref   String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  OderDetail OderDetail[]

  @@map("orders")
}

model OderDetail {
  id       Int @id @default(autoincrement())
  price    Int
  quantity Int

  order   Order @relation(fields: [orderId], references: [id])
  orderId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("order_detail")
}
